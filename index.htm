<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>

<body>
    <div id="version">0.2</div>
    <div id="peeriddiv">_</div>
    <div id="uniqueiddiv">_</div>
    <div id="statediv">0</div>
    <div>
    switch<input type="checkbox" id="switchcheck">
</div>
<div>
    <label>
        <input type="checkbox" id="myCheckbox">
        Is Lamp 
    </label>
</div>
<div id="peerlist">

</div>
    <script type="module">
        let peeriddiv = document.getElementById("peeriddiv");
        let uniqueiddiv = document.getElementById("uniqueiddiv");
        let switchcheck = document.getElementById("switchcheck");
        let statediv = document.getElementById("statediv");
        let peerlist = document.getElementById("peerlist");
        
        switchcheck.disabled = true;

        let uniqueId = localStorage.getItem('uniqueId');
        if (!uniqueId) {
            uniqueId = crypto.randomUUID(); // Generate a UUID
            localStorage.setItem('uniqueId', uniqueId); // Store it in localStorage
        }
        console.log('Your unique ID:', uniqueId);
        uniqueiddiv.textContent = uniqueId;

        // Reference the checkbox
        const checkbox = document.getElementById('myCheckbox');

        // Load the saved state from localStorage
        const savedState = localStorage.getItem('checkboxChecked');

        // Set the checkbox state based on the saved value
        if (savedState === 'true') {
            checkbox.checked = true;
        }

        // Add an event listener to update localStorage whenever the checkbox state changes
        checkbox.addEventListener('change', () => {
            localStorage.setItem('checkboxChecked', checkbox.checked);
            console.log(`Checkbox is now: ${checkbox.checked}`);
            console.log(room.getPeers())
            Object.keys(room.getPeers()).forEach(k => {
                console.log(k)
            });
        });
        switchcheck.onchange=e=>{
            sendMsg({
                type:"doswitch",
                id:switchuniqueid,
                state:switchcheck.checked
            },switchpeerid);
            switchcheck.disabled = true;
            
        };



        import { joinRoom,selfId } from './trystero-nostr.min.js'
        const config = { appId: 'san_narciso_3d' }
        const room = joinRoom(config, 'yoyodyne_')
        window.trysteroroom = room;
        let updatepeerlist = ()=>{
            peerlist.innerHTML="";
            const peers = room.getPeers();
            Object.keys(peers).forEach(i => {
                let d = document.createElement("div");
                d.textContent = i+"   "+peerobjects[i].isswitch+peers[i].currentRemoteDescription.sdp.split("\r\n")[1];
                peerlist.appendChild(d)
            });
        }
        room.onPeerJoin(peerId => {
            console.log(`${peerId} joined`)
            peerobjects[peerId]={
                isswitch:false
            }

            setTimeout(k=>{
                const pid = peerId;
                console.log(pid)
                console.log(typeof savedState)
                if(savedState === 'true'){
                    sendMsg({
                        type:"switch",
                        id:uniqueId,
                        state:0
                    },pid)
                }
            },100)
            updatepeerlist();
        });
        room.onPeerLeave(peerId =>{
            console.log(`${peerId} left`)
            updatepeerlist();
        })
        room.onPeerStream(
            (stream, peerId) => (peerElements[peerId].video.srcObject = stream)
        )
        //room.leave()

        console.log(`my peer ID is ${selfId}`)
        peeriddiv.innerText = selfId;

        

        const [sendDrink, getDrink] = room.makeAction('drink')
        function sendMsg(msg,friendId){
            sendDrink(msg, friendId)
        }
        // buy drink for a friend

        // buy round for the house (second argument omitted)
        sendDrink({ drink: 'mezcal', withIce: false })

        // listen for drinks sent to you
        let switchpeerid = "";
        let switchuniqueid = "";
        let switchstate = 0;
        let peerobjects = {};
        getDrink((data, peerId) =>{
            console.log(data,peerId)
            if(data.type=="switch"){
                switchcheck.disabled = false;
                statediv.textContent = data.state;
                switchpeerid = peerId;
                switchstate = data.state;
                switchuniqueid = data.id;
                peerobjects[peerId].isswitch = true;
                updatepeerlist();
            }
            if(data.type=="doswitch"){
                switchstate = data.state;
                statediv.textContent = data.state*1;
                sendMsg({
                        type:"confirm",
                        id:uniqueId,
                        state:data.state*1
                },peerId)
            }
            if(data.type=="confirm"){
                statediv.textContent = data.state*1;
                switchcheck.disabled = false;
            }
        }
        )
    </script>
</body>

</html>